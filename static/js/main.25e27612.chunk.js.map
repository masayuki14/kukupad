{"version":3,"sources":["enum.ts","components/Steps.tsx","components/Masks.tsx","components/Directions.tsx","components/Axes.tsx","components/Menu.tsx","components/Cell.tsx","components/Formula.tsx","components/List.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MaskPosition","MaskType","SortDirection","MultiplyStep","Steps","step","Nine","onChange","React","useState","selectedValue","setSelectedValue","handleChange","event","Number","target","value","Fragment","CssBaseline","Grid","container","direction","justify","alignItems","item","xs","FormLabel","FormControl","RadioGroup","row","defaultValue","FormControlLabel","control","Radio","color","label","labelPlacement","Sixteen","Twenty","Masks","mask","Outcome","Left","Right","Random","Directions","Asc","Desc","useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","Axes","axis","classes","items","map","v","i","MenuItem","className","Select","labelId","id","Menu","onChangeStep","onChangeMask","onChangeDirection","onChangeAxis","baseStyle","display","height","justifyContent","fontSize","Cell","val","hidden","locked","noBorder","slim","isHidden","switchHidden","bgColor","setBgColor","optionStyle","backgroundColor","border","width","style","Object","assign","useEffect","onClick","Formula","props","left","right","outcome","List","formulas","steps","maskType","Math","floor","random","createMuiTheme","palette","type","makeSteps","targetSteps","slice","sort","a","b","array","length","j","App","setStep","setMask","setDirection","setAxis","selectedSteps","setSelectedSteps","selectedMask","setSelectedMask","selectedAxis","setSelectedAxis","ThemeProvider","Button","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25e27612.chunk.js","sourcesContent":["export enum MaskPosition {\n  Left,\n  Right,\n  Outcome\n}\n\nexport enum MaskType {\n  Left,\n  Right,\n  Outcome,\n  Random\n}\n\nexport function convertType(maskType?: MaskType | undefined): MaskPosition {\n  let position = (function (): MaskPosition {\n    if (maskType === MaskType.Random) {\n      let v = Math.floor((Math.random() * 10000)) % 3\n      switch (v) {\n        case 0:\n          return MaskPosition.Left\n        case 1:\n          return MaskPosition.Right\n        case 2:\n          return MaskPosition.Outcome\n      }\n      return MaskPosition.Outcome\n    }\n\n    switch (maskType) {\n      case MaskType.Left:\n        return MaskPosition.Left\n      case MaskType.Right:\n        return MaskPosition.Right\n      case MaskType.Outcome:\n        return MaskPosition.Outcome\n    }\n    return MaskPosition.Outcome\n  })()\n\n  return position\n}\n\nexport enum SortDirection {\n  Asc,\n  Desc,\n  Random\n}\n\nexport enum MultiplyStep {\n  Nine = 9,\n  Sixteen = 16,\n  Twenty = 20\n}","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MultiplyStep } from './../enum'\n\ntype PropTypes = {\n  step?: MultiplyStep,\n  onChange?: (v: MultiplyStep) => void\n}\n\nfunction Steps({ step = MultiplyStep.Nine, onChange = () => { } }: PropTypes) {\n  const [selectedValue, setSelectedValue] = React.useState(step);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(Number(event.target.value));\n    if (onChange) onChange(Number(event.target.value))\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Grid container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={2}>\n          <FormLabel>かけざんのだんすう</FormLabel>\n        </Grid>\n        <Grid item xs={4}>\n          <FormControl>\n            <RadioGroup row value={selectedValue} defaultValue={step}>\n              <FormControlLabel\n                value={MultiplyStep.Nine}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"9\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={MultiplyStep.Sixteen}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"16\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={MultiplyStep.Twenty}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"20\"\n                labelPlacement=\"top\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default Steps","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { MaskType } from '../enum'\n\ntype PropTypes = {\n  mask?: MaskType,\n  onChange?: (v: MaskType) => void\n}\n\nfunction Masks({ mask = MaskType.Outcome, onChange = () => { } }: PropTypes) {\n  const [selectedValue, setSelectedValue] = React.useState(mask);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(Number(event.target.value))\n    if (onChange) onChange(Number(event.target.value))\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Grid container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={2}>\n          <FormLabel>かくすばしょ</FormLabel>\n        </Grid>\n        <Grid item xs={4}>\n          <FormControl>\n            <RadioGroup row value={selectedValue} defaultValue={mask}>\n              <FormControlLabel\n                value={MaskType.Left}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"ひだり\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={MaskType.Right}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"みぎ\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={MaskType.Outcome}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"こたえ\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={MaskType.Random}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"ばらばら\"\n                labelPlacement=\"top\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default Masks","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { SortDirection } from './../enum'\n\ntype PropTypes = {\n  direction?: SortDirection,\n  onChange?: (v: SortDirection) => void\n}\n\nfunction Directions({ direction = SortDirection.Asc, onChange = () => { } }: PropTypes) {\n  const [selectedValue, setSelectedValue] = React.useState(direction);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(Number(event.target.value))\n    if (onChange) onChange(Number(event.target.value))\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Grid container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={2}>\n          <FormLabel>じゅんばん</FormLabel>\n        </Grid>\n        <Grid item xs={4}>\n          <FormControl>\n            <RadioGroup row value={selectedValue} defaultValue={direction}>\n              <FormControlLabel\n                value={SortDirection.Asc}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"うえから\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={SortDirection.Desc}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"したから\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={SortDirection.Random}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"ばらばら\"\n                labelPlacement=\"top\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default Directions","import React from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n  }),\n)\n\ntype PropTypes = {\n  axis?: number,\n  onChange?: (v: number) => void\n}\n\nfunction Axes({ axis = 1, onChange = () => { } }: PropTypes) {\n  const classes = useStyles();\n  const [selectedValue, setSelectedValue] = React.useState(axis);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setSelectedValue(Number(event.target.value))\n    if (onChange) onChange(Number(event.target.value))\n  };\n\n  const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20].map((v, i) => {\n    return (\n      <MenuItem key={i} value={v}>{v}</MenuItem>\n    )\n  })\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Grid container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={2}>\n          <FormLabel>かけるかず</FormLabel>\n        </Grid>\n        <Grid item xs={4}>\n          <FormControl className={classes.formControl}>\n\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={selectedValue}\n              onChange={handleChange}\n            >\n              {items}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default Axes","import React from 'react'\nimport Steps from './Steps'\nimport Masks from './Masks'\nimport Directions from './Directions'\nimport Axes from './Axes'\n\nimport { MultiplyStep, MaskType, SortDirection } from './../enum'\n\ntype PropTypes = {\n  step?: MultiplyStep,\n  mask?: MaskType,\n  direction?: SortDirection\n  axis?: number,\n  onChangeStep?: (v: number) => void,\n  onChangeMask?: (v: number) => void,\n  onChangeDirection?: (v: number) => void,\n  onChangeAxis?: (v: number) => void\n}\n\nfunction Menu({\n  step,\n  mask,\n  direction,\n  axis,\n  onChangeStep,\n  onChangeMask,\n  onChangeDirection,\n  onChangeAxis\n}: PropTypes) {\n\n  return (\n    <div>\n      <Steps step={step} onChange={onChangeStep} />\n      <Masks mask={mask} onChange={onChangeMask} />\n      <Directions direction={direction} onChange={onChangeDirection} />\n      <Axes axis={axis} onChange={onChangeAxis} />\n    </div >\n  )\n}\n\nexport default Menu","import React from 'react';\nimport { useState, useEffect } from 'react';\n\nconst baseStyle = {\n  display: 'inline-flex',\n  height: 120,\n  justifyContent: 'center',\n  alignItems: 'center',\n  fontSize: '3rem'\n}\n\ntype PropTypes = {\n  val: number | string,\n  hidden?: boolean,\n  locked?: boolean,\n  noBorder?: boolean,\n  slim?: boolean,\n}\n\nfunction Cell({ val, hidden = false, locked = false, noBorder = false, slim = false }: PropTypes) {\n\n  const [isHidden, switchHidden] = useState(hidden)\n  const [bgColor, setBgColor] = useState(hidden ? 'gray' : '')\n\n  const handleTap = () => {\n    if (locked) return\n    switchHidden(!isHidden)\n    setBgColor(!isHidden ? 'gray' : '')\n  }\n\n  const optionStyle = {\n    backgroundColor: bgColor,\n    border: noBorder ? '0px' : 'solid black 2px',\n    width: slim ? 60 : 120\n  }\n  const style = Object.assign(\n    optionStyle,\n    baseStyle\n  )\n\n  useEffect(() => {\n    switchHidden(hidden)\n    setBgColor(hidden ? 'gray' : '')\n  }, [hidden, locked, val])\n\n  return (\n    <div style={style} onClick={handleTap}>\n      <span> {isHidden ? null : val} </span>\n    </div>\n  )\n}\n\nexport default Cell;","import React from 'react';\nimport Cell from './Cell'\nimport { MaskPosition } from '../enum'\n\ntype PropTypes = {\n  left: number;\n  right: number;\n  outcome: number;\n  mask?: MaskPosition\n}\n\nconst style = {\n  display: 'flex',\n  justifyContent: 'center',\n  margin: 10\n}\n\nfunction Formula(props: PropTypes) {\n\n  return (\n    <div style={style}>\n      <Cell val={props.left} hidden={props.mask === MaskPosition.Left} locked={props.mask !== MaskPosition.Left} />\n      <Cell val=\"×\" noBorder={true} slim={true} />\n      <Cell val={props.right} hidden={props.mask === MaskPosition.Right} locked={props.mask !== MaskPosition.Right} />\n      <Cell val=\"＝\" noBorder={true} slim={true} />\n      <Cell val={props.outcome} hidden={props.mask === MaskPosition.Outcome} locked={props.mask !== MaskPosition.Outcome} />\n    </ div>\n  )\n}\n\nexport default Formula","import React from 'react';\nimport Formula from './Formula'\nimport {\n  MaskType,\n  convertType\n} from './../enum'\n\ntype PropTypes = {\n  steps: number[],\n  axis: number,\n  mask?: MaskType\n}\n\nfunction List(props: PropTypes) {\n  const formulas = props.steps.map(\n    (v, i) => (<Formula key={i} left={props.axis} right={v} outcome={props.axis * v} mask={convertType(props.mask)} />)\n  )\n\n  return (\n    <React.Fragment>\n      {formulas}\n    </React.Fragment>\n  )\n}\n\nexport default List","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button';\n\n// import logo from './logo.svg';\nimport './App.css';\nimport { MaskType, SortDirection, MultiplyStep } from './enum'\nimport Menu from './components/Menu';\nimport List from './components/List'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light'\n  }\n})\n\nconst makeSteps = (direction: SortDirection, step: MultiplyStep) => {\n\n  const steps = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n  let targetSteps: number[] = []\n\n  switch (direction) {\n    case SortDirection.Asc:\n      targetSteps = steps.slice(0, step)\n      break\n    case SortDirection.Desc:\n      targetSteps = steps.slice(0, step).sort((a, b) => b - a)\n      break\n    case SortDirection.Random:\n      targetSteps = (([...array]) => {\n        for (let i = array.length - 1; i >= 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array\n      })(steps.slice(0, step))\n  }\n  return targetSteps\n}\n\nfunction App() {\n\n  const [step, setStep] = React.useState(MultiplyStep.Nine)\n  const [mask, setMask] = React.useState(MaskType.Outcome)\n  const [direction, setDirection] = React.useState(SortDirection.Random)\n  const [axis, setAxis] = React.useState(1)\n\n  const onChangeStep = (v: MultiplyStep) => setStep(v)\n  const onChangeMask = (v: MaskType) => setMask(v)\n  const onChangeDirection = (v: SortDirection) => setDirection(v)\n  const onChangeAxis = (v: number) => setAxis(v)\n\n  const [selectedSteps, setSelectedSteps] = React.useState(makeSteps(direction, step))\n  const [selectedMask, setSelectedMask] = React.useState(mask)\n  const [selectedAxis, setSelectedAxis] = React.useState(axis)\n\n  // ボタンタップで設定を反映させる\n  const flowSettings = () => {\n    setSelectedMask(mask)\n    setSelectedSteps(makeSteps(direction, step))\n    setSelectedAxis(axis)\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <body>\n          <div>\n            <Menu step={step} onChangeStep={onChangeStep}\n              mask={mask} onChangeMask={onChangeMask}\n              direction={direction} onChangeDirection={onChangeDirection}\n              axis={axis} onChangeAxis={onChangeAxis}\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={flowSettings}>かけざんを始める</Button>\n            <List axis={selectedAxis} mask={selectedMask} steps={selectedSteps} />\n          </div>\n        </body>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}