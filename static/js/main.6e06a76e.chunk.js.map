{"version":3,"sources":["enum.ts","components/Steps.tsx","components/Masks.tsx","components/Directions.tsx","components/Axes.tsx","components/Menu.tsx","components/Cell.tsx","components/Formula.tsx","components/List.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MaskPosition","MaskType","SortDirection","MultiplyStep","Steps","step","Nine","onChange","React","useState","selectedValue","setSelectedValue","handleChange","event","Number","target","value","Fragment","CssBaseline","Grid","container","direction","justify","alignItems","item","xs","FormLabel","FormControl","RadioGroup","row","defaultValue","FormControlLabel","control","Radio","color","label","labelPlacement","Sixteen","Twenty","Masks","mask","Outcome","Left","Right","Random","Directions","Asc","Desc","useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","Axes","axis","classes","items","map","v","i","MenuItem","className","Select","labelId","id","Menu","onChangeStep","onChangeMask","onChangeDirection","onChangeAxis","baseStyle","display","height","justifyContent","fontSize","Cell","val","hidden","locked","noBorder","slim","isHidden","switchHidden","bgColor","setBgColor","optionStyle","backgroundColor","border","width","style","Object","assign","useEffect","onClick","Formula","props","left","right","outcome","List","formulas","steps","maskType","Math","floor","random","createMuiTheme","palette","type","makeSteps","targetSteps","slice","sort","a","b","array","length","j","App","setStep","setMask","setDirection","setAxis","selectedSteps","setSelectedSteps","selectedMask","setSelectedMask","selectedAxis","setSelectedAxis","ThemeProvider","Button","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e06a76e.chunk.js","sourcesContent":["export enum MaskPosition {\n  Left,\n  Right,\n  Outcome\n}\n\nexport enum MaskType {\n  Left,\n  Right,\n  Outcome,\n  Random\n}\n\nexport function convertType(maskType?: MaskType | undefined): MaskPosition {\n  const position = ((): MaskPosition => {\n    if (maskType === MaskType.Random) {\n      const v = Math.floor(Math.random() * 10000) % 3\n      switch (v) {\n        case 0:\n          return MaskPosition.Left\n        case 1:\n          return MaskPosition.Right\n        case 2:\n          return MaskPosition.Outcome\n      }\n      return MaskPosition.Outcome\n    }\n\n    switch (maskType) {\n      case MaskType.Left:\n        return MaskPosition.Left\n      case MaskType.Right:\n        return MaskPosition.Right\n      case MaskType.Outcome:\n        return MaskPosition.Outcome\n    }\n    return MaskPosition.Outcome\n  })()\n\n  return position\n}\n\nexport enum SortDirection {\n  Asc,\n  Desc,\n  Random\n}\n\nexport enum MultiplyStep {\n  Nine = 9,\n  Sixteen = 16,\n  Twenty = 20\n}\n","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { MultiplyStep } from './../enum'\n\ntype PropTypes = {\n  step?: MultiplyStep\n  onChange?: (v: MultiplyStep) => void\n}\n\nfunction Steps({ step = MultiplyStep.Nine, onChange = () => {} }: PropTypes) {\n  const [selectedValue, setSelectedValue] = React.useState(step)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(Number(event.target.value))\n    if (onChange) onChange(Number(event.target.value))\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={2}>\n          <FormLabel>かけざんのだんすう</FormLabel>\n        </Grid>\n        <Grid item xs={4}>\n          <FormControl>\n            <RadioGroup row value={selectedValue} defaultValue={step}>\n              <FormControlLabel\n                value={MultiplyStep.Nine}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"9\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={MultiplyStep.Sixteen}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"16\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={MultiplyStep.Twenty}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"20\"\n                labelPlacement=\"top\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default Steps\n","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { MaskType } from '../enum'\n\ntype PropTypes = {\n  mask?: MaskType\n  onChange?: (v: MaskType) => void\n}\n\nfunction Masks({ mask = MaskType.Outcome, onChange = () => {} }: PropTypes) {\n  const [selectedValue, setSelectedValue] = React.useState(mask)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(Number(event.target.value))\n    if (onChange) onChange(Number(event.target.value))\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={2}>\n          <FormLabel>かくすばしょ</FormLabel>\n        </Grid>\n        <Grid item xs={4}>\n          <FormControl>\n            <RadioGroup row value={selectedValue} defaultValue={mask}>\n              <FormControlLabel\n                value={MaskType.Left}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"ひだり\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={MaskType.Right}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"みぎ\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={MaskType.Outcome}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"こたえ\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={MaskType.Random}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"ばらばら\"\n                labelPlacement=\"top\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default Masks\n","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { SortDirection } from './../enum'\n\ntype PropTypes = {\n  direction?: SortDirection\n  onChange?: (v: SortDirection) => void\n}\n\nfunction Directions({\n  direction = SortDirection.Asc,\n  onChange = () => {}\n}: PropTypes) {\n  const [selectedValue, setSelectedValue] = React.useState(direction)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(Number(event.target.value))\n    if (onChange) onChange(Number(event.target.value))\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={2}>\n          <FormLabel>じゅんばん</FormLabel>\n        </Grid>\n        <Grid item xs={4}>\n          <FormControl>\n            <RadioGroup row value={selectedValue} defaultValue={direction}>\n              <FormControlLabel\n                value={SortDirection.Asc}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"うえから\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={SortDirection.Desc}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"したから\"\n                labelPlacement=\"top\"\n              />\n              <FormControlLabel\n                value={SortDirection.Random}\n                control={<Radio color=\"primary\" onChange={handleChange} />}\n                label=\"ばらばら\"\n                labelPlacement=\"top\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default Directions\n","import React from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    }\n  })\n)\n\ntype PropTypes = {\n  axis?: number\n  onChange?: (v: number) => void\n}\n\nfunction Axes({ axis = 1, onChange = () => {} }: PropTypes) {\n  const classes = useStyles()\n  const [selectedValue, setSelectedValue] = React.useState(axis)\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setSelectedValue(Number(event.target.value))\n    if (onChange) onChange(Number(event.target.value))\n  }\n\n  const items = [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20\n  ].map((v, i) => {\n    return (\n      <MenuItem key={i} value={v}>\n        {v}\n      </MenuItem>\n    )\n  })\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={2}>\n          <FormLabel>かけるかず</FormLabel>\n        </Grid>\n        <Grid item xs={4}>\n          <FormControl className={classes.formControl}>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={selectedValue}\n              onChange={handleChange}\n            >\n              {items}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default Axes\n","import React from 'react'\nimport Steps from './Steps'\nimport Masks from './Masks'\nimport Directions from './Directions'\nimport Axes from './Axes'\n\nimport { MultiplyStep, MaskType, SortDirection } from './../enum'\n\ntype PropTypes = {\n  step?: MultiplyStep\n  mask?: MaskType\n  direction?: SortDirection\n  axis?: number\n  onChangeStep?: (v: number) => void\n  onChangeMask?: (v: number) => void\n  onChangeDirection?: (v: number) => void\n  onChangeAxis?: (v: number) => void\n}\n\nfunction Menu({\n  step,\n  mask,\n  direction,\n  axis,\n  onChangeStep,\n  onChangeMask,\n  onChangeDirection,\n  onChangeAxis\n}: PropTypes) {\n  return (\n    <div>\n      <Steps step={step} onChange={onChangeStep} />\n      <Masks mask={mask} onChange={onChangeMask} />\n      <Directions direction={direction} onChange={onChangeDirection} />\n      <Axes axis={axis} onChange={onChangeAxis} />\n    </div>\n  )\n}\n\nexport default Menu\n","import React, { useState, useEffect } from 'react'\n\nconst baseStyle = {\n  display: 'inline-flex',\n  height: 120,\n  justifyContent: 'center',\n  alignItems: 'center',\n  fontSize: '3rem'\n}\n\ntype PropTypes = {\n  val: number | string\n  hidden?: boolean\n  locked?: boolean\n  noBorder?: boolean\n  slim?: boolean\n}\n\nfunction Cell({\n  val,\n  hidden = false,\n  locked = false,\n  noBorder = false,\n  slim = false\n}: PropTypes) {\n  const [isHidden, switchHidden] = useState(hidden)\n  const [bgColor, setBgColor] = useState(hidden ? 'gray' : '')\n\n  const handleTap = () => {\n    if (locked) return\n    switchHidden(!isHidden)\n    setBgColor(!isHidden ? 'gray' : '')\n  }\n\n  const optionStyle = {\n    backgroundColor: bgColor,\n    border: noBorder ? '0px' : 'solid black 2px',\n    width: slim ? 60 : 120\n  }\n  const style = Object.assign(optionStyle, baseStyle)\n\n  useEffect(() => {\n    switchHidden(hidden)\n    setBgColor(hidden ? 'gray' : '')\n  }, [hidden, locked, val])\n\n  return (\n    <div style={style} onClick={handleTap}>\n      <span> {isHidden ? null : val} </span>\n    </div>\n  )\n}\n\nexport default Cell\n","import React from 'react'\nimport Cell from './Cell'\nimport { MaskPosition } from '../enum'\n\ntype PropTypes = {\n  left: number\n  right: number\n  outcome: number\n  mask?: MaskPosition\n}\n\nconst style = {\n  display: 'flex',\n  justifyContent: 'center',\n  margin: 10\n}\n\nfunction Formula(props: PropTypes) {\n  return (\n    <div style={style}>\n      <Cell\n        val={props.left}\n        hidden={props.mask === MaskPosition.Left}\n        locked={props.mask !== MaskPosition.Left}\n      />\n      <Cell val=\"×\" noBorder={true} slim={true} />\n      <Cell\n        val={props.right}\n        hidden={props.mask === MaskPosition.Right}\n        locked={props.mask !== MaskPosition.Right}\n      />\n      <Cell val=\"＝\" noBorder={true} slim={true} />\n      <Cell\n        val={props.outcome}\n        hidden={props.mask === MaskPosition.Outcome}\n        locked={props.mask !== MaskPosition.Outcome}\n      />\n    </div>\n  )\n}\n\nexport default Formula\n","import React from 'react'\nimport Formula from './Formula'\nimport { MaskType, convertType } from './../enum'\n\ntype PropTypes = {\n  steps: number[]\n  axis: number\n  mask?: MaskType\n}\n\nfunction List(props: PropTypes) {\n  const formulas = props.steps.map((v, i) => (\n    <Formula\n      key={i}\n      left={props.axis}\n      right={v}\n      outcome={props.axis * v}\n      mask={convertType(props.mask)}\n    />\n  ))\n\n  return <React.Fragment>{formulas}</React.Fragment>\n}\n\nexport default List\n","import React from 'react'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\n\n// import logo from './logo.svg';\nimport './App.css'\nimport { MaskType, SortDirection, MultiplyStep } from './enum'\nimport Menu from './components/Menu'\nimport List from './components/List'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light'\n  }\n})\n\nconst makeSteps = (direction: SortDirection, step: MultiplyStep) => {\n  const steps = [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20\n  ]\n  let targetSteps: number[] = []\n\n  switch (direction) {\n    case SortDirection.Asc:\n      targetSteps = steps.slice(0, step)\n      break\n    case SortDirection.Desc:\n      targetSteps = steps.slice(0, step).sort((a, b) => b - a)\n      break\n    case SortDirection.Random:\n      targetSteps = (([...array]) => {\n        for (let i = array.length - 1; i >= 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1))\n          ;[array[i], array[j]] = [array[j], array[i]]\n        }\n        return array\n      })(steps.slice(0, step))\n  }\n  return targetSteps\n}\n\nfunction App() {\n  const [step, setStep] = React.useState(MultiplyStep.Nine)\n  const [mask, setMask] = React.useState(MaskType.Outcome)\n  const [direction, setDirection] = React.useState(SortDirection.Random)\n  const [axis, setAxis] = React.useState(1)\n\n  const onChangeStep = (v: MultiplyStep) => setStep(v)\n  const onChangeMask = (v: MaskType) => setMask(v)\n  const onChangeDirection = (v: SortDirection) => setDirection(v)\n  const onChangeAxis = (v: number) => setAxis(v)\n\n  const [selectedSteps, setSelectedSteps] = React.useState(\n    makeSteps(direction, step)\n  )\n  const [selectedMask, setSelectedMask] = React.useState(mask)\n  const [selectedAxis, setSelectedAxis] = React.useState(axis)\n\n  // ボタンタップで設定を反映させる\n  const flowSettings = () => {\n    setSelectedMask(mask)\n    setSelectedSteps(makeSteps(direction, step))\n    setSelectedAxis(axis)\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <body>\n          <div>\n            <Menu\n              step={step}\n              onChangeStep={onChangeStep}\n              mask={mask}\n              onChangeMask={onChangeMask}\n              direction={direction}\n              onChangeDirection={onChangeDirection}\n              axis={axis}\n              onChangeAxis={onChangeAxis}\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={flowSettings}>\n              かけざんを始める\n            </Button>\n            <List\n              axis={selectedAxis}\n              mask={selectedMask}\n              steps={selectedSteps}\n            />\n          </div>\n        </body>\n      </ThemeProvider>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}